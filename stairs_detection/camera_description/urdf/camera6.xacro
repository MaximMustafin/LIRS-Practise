<?xml version="1.0"?>
<!-- Revolute-Revolute Manipulator -->
<robot name="camera6" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Constants for robot dimensions -->
  <xacro:property name="PI" value="3.1415926535897931"/>
  <xacro:property name="mass" value="1" /> <!-- arbitrary value for mass -->
  <xacro:property name="width" value="0.025" /> <!-- Square dimensions (widthxwidth) of beams -->
  <xacro:property name="height1" value="2" /> <!-- Link 1 -->
  <xacro:property name="camera6_link" value="0.05" /> <!-- Size of square 'camera' box -->

  <!-- Import all Gazebo-customization elements, including Gazebo colors -->
  <xacro:include filename="$(find camera_description)/urdf/camera6.gazebo" />
  <!-- Import Rviz colors -->
  <xacro:include filename="$(find camera_description)/urdf/materials.xacro" />

  <!-- Used for fixing robot to Gazebo 'base_link' -->
  <link name="world"/>

  <joint name="fixed" type="fixed">
    <parent link="world"/>
    <child link="link1"/>
  </joint>

  <!-- Base Link -->
  <link name="link1">
    <collision>
      <origin xyz="0 0 ${height1/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${width} ${width} ${height1}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 ${height1/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${width} ${width} ${height1}"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <inertial>
      <origin xyz="0 0 ${height1/2}" rpy="0 0 0"/>
      <mass value="${mass}"/>
      <inertia
	  ixx="${mass / 12.0 * (width*width + height1*height1)}" ixy="0.0" ixz="0.0"
	  iyy="${mass / 12.0 * (height1*height1 + width*width)}" iyz="0.0"
	  izz="${mass / 12.0 * (width*width + width*width)}"/>
    </inertial>
  </link>

  <joint name="camera6_joint" type="fixed">
    <axis xyz="0 0 0" />
    <origin xyz="${camera6_link} 0 ${height1}" rpy="0 0 0"/>
    <parent link="link1"/>
    <child link="camera6_link"/>
  </joint>

  <!-- Camera -->
  <link name="camera6_link">
    <collision>
      <origin xyz="${-camera6_link} 0 ${camera6_link/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${camera6_link} ${camera6_link} ${camera6_link}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="${-camera6_link} 0 ${camera6_link/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${camera6_link} ${camera6_link} ${camera6_link}"/>
      </geometry>
      <material name="red"/>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <!-- generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames
      so that ros and opencv can operate on the camera frame correctly -->
  <joint name="camera6_optical_joint" type="fixed">
    <!-- these values have to be these values otherwise the gazebo camera image
        won't be aligned properly with the frame it is supposedly originating from -->
    <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
    <parent link="camera6_link"/>
    <child link="camera6_link_optical"/>
  </joint>

  <link name="camera6_link_optical">
  </link>

</robot>
